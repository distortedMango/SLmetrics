% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{jaccard}
\alias{jaccard}
\alias{csi}
\alias{tscore}
\title{Jaccard Index}
\usage{
# using `jaccard()`-function
jaccard(
  actual,
  predicted,
  aggregate = FALSE
)

# using `csi()`-function
csi(
  actual,
  predicted,
  aggregate = FALSE
)

# using `tscore()`-function
tscore(
  actual,
  predicted,
  aggregate = FALSE
)
}
\arguments{
\item{actual}{A <\link{factor}>-vector of \link{length} \eqn{n}, and \eqn{k} levels.}

\item{predicted}{A <\link{factor}>-vector of \link{length} \eqn{n}, and \eqn{k} levels.}

\item{aggregate}{A <\link{logical}>-value of \link{length} \eqn{1}. \link{FALSE} by default. If \link{TRUE} it returns the
micro average across all \eqn{k} classes}
}
\value{
If \code{aggregate} is \link{FALSE} (the default), a named <\link{numeric}>-vector of \link{length} k

If \code{aggregate} is \link{TRUE}, a <\link{numeric}>-vector of \link{length} 1
}
\description{
The Jaccard Index measures similarity between finite sample sets and is defined as the size of the intersection divided by the size of the union of the sample sets.
}
\details{
The Jaccard Index is calculated for each class \eqn{k} as follows,

\deqn{
  \frac{\#TP_k}{\#TP_k + \#FP_k + \#FN_k}
}

Where \eqn{\#TP_k}, \eqn{\#FP_k}, and \eqn{\#FN_k} represent the number of true positives, false positives, and false negatives for each class \eqn{k}, respectively.

When \code{aggregate = TRUE}, the micro-average is calculated as,

\deqn{
  \frac{\sum_{i = 1}^{k} TP_i}{\sum_{i = 1}^{k} TP_i + \sum_{i = 1}^{k} FP_k + \sum_{i = 1}^{k} FN_k}
}
}
\examples{
# 1) assume that actual
# and predicted are class labels
# from some model
actual <- factor(
  x = sample(
    x = 1:3,
    size = 10,
    replace = TRUE,
    prob = c(0.1,0.1,0.8)
  ),
  levels = c(1:4),
  labels = letters[1:4]
)

# 1.2) predicted
# values
predicted <- factor(
  x = sample(
    x = 1:4,
    size = 10,
    replace = TRUE,
    prob = c(0.1,0.1,0.8,0)
  ),
  levels = c(1:4),
  labels = letters[1:4]
)

# 2) evaluate the
# performance of all classes
jaccard(
  actual    = actual,
  predicted = predicted
)

# 3) evaluate the
# overall performance
# with micro averaging
jaccard(
  actual    = actual,
  predicted = predicted,
  aggregate = TRUE
)

# 4) evaluate the
# overall performance
# with macro averaging
mean(
  jaccard(
    actual    = actual,
    predicted = predicted,
    aggregate = FALSE
  )
)
}
\seealso{
Other classification: 
\code{\link{accuracy}()},
\code{\link{cmatrix}()},
\code{\link{dor}()},
\code{\link{fbeta}()},
\code{\link{fdr}()},
\code{\link{fer}()},
\code{\link{fmi}()},
\code{\link{fpr}()},
\code{\link{kappa}()},
\code{\link{mcc}()},
\code{\link{nlr}()},
\code{\link{npv}()},
\code{\link{plr}()},
\code{\link{precision}()},
\code{\link{recall}()},
\code{\link{specificity}()},
\code{\link{zerooneloss}()}
}
\concept{classification}
